#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import psycopg2
import os

def init_database():
    """–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã –∏ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        DATABASE_URL = os.getenv('DATABASE_URL')
        if DATABASE_URL and DATABASE_URL.startswith('postgres://'):
            DATABASE_URL = DATABASE_URL.replace('postgres://', 'postgresql://', 1)
        
        if DATABASE_URL:
            conn = psycopg2.connect(DATABASE_URL)
        else:
            conn = psycopg2.connect(
                host='localhost',
                database='octopus_db',
                user='octopus_user',
                password='octopus_password'
            )
        
        cur = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        cur.execute('''
            CREATE TABLE IF NOT EXISTS users (
                id SERIAL PRIMARY KEY,
                nickname VARCHAR(50) UNIQUE NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        cur.execute('SELECT COUNT(*) FROM users')
        count = cur.fetchone()[0]
        
        if count == 0:
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            test_users = ['test_user_1', 'test_user_2', 'admin']
            
            for nickname in test_users:
                cur.execute('INSERT INTO users (nickname) VALUES (%s)', (nickname,))
            
            print("‚úÖ Test users added")
        else:
            print(f"‚ÑπÔ∏è  Users already exist ({count} users)")
        
        conn.commit()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cur.execute('SELECT id, nickname, created_at FROM users ORDER BY created_at DESC')
        users = cur.fetchall()
        
        print(f"\nüìä All users ({len(users)}):")
        for user in users:
            print(f"  - ID: {user[0]}, Nickname: {user[1]}, Created: {user[2]}")
        
        cur.close()
        conn.close()
        print("\n‚úÖ Database initialization completed")
        
    except Exception as e:
        print(f"‚ùå Database initialization failed: {e}")
        print("üí° Make sure PostgreSQL is running and DATABASE_URL is correct")

if __name__ == "__main__":
    print("üöÄ Initializing database...")
    print(f"üìç DATABASE_URL: {os.getenv('DATABASE_URL', 'Using local connection')}")
    init_database()